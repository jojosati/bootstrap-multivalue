{"name":"bootstrap-multivalue","tagline":"Multivalue wraps a native input or any javascript input widget to accept multiple values.","body":"# [Bootstrap Multivalue](http://jojosati.github.com/bootstrap-multivalue)\r\n\r\nMultivalue wraps a native input or any javascript input widget to accept multiple values.\r\n\r\nSee [demo](http://jojosati.github.com/bootstrap-multivalue/demo).\r\n\r\n# Using multivalue\r\n\r\n#### Use with native input\r\n\r\n    <input type=\"text\" id=\"tags\">\r\n######\r\n    $('#tags').multivalue();\r\n\r\nor simply declare data-coprovide with no more script.\r\n\r\n    <input type=\"text\" data-coprovide=\"multivalue\">\r\n    \r\n#### Use with [typeahead](http://twitter.github.com/bootstrap/javascript.html#typeahead) \r\n\r\nto simulate [tags manager](http://welldonethings.com/tags/manager)\r\n\r\n    <input type=\"text\" id=\"tags\">\r\n######\r\n    $('#tags')\r\n      .typeahead({source:['Java','Php','Python','Ruby']})\r\n      .multivalue();\r\n    \r\nor simply declare data-coprovide with no more script.\r\n\r\n    <input type=\"text\" \r\n      data-provide=\"typeahead\" data-source='[\"Java\",\"Php\",\"Python\",\"Ruby\"]'\r\n      data-coprovide=\"multivalue\">\r\n\r\n#### Use with [datepicker](http://www.eyecon.ro/bootstrap-datepicker/)\r\n\r\nRecommend using [eternicode's repo](https://github.com/eternicode/bootstrap-datepicker) or [thai extension](https://github.com/jojosati/bootstrap-datepicker-thai)\r\nto simulate [daterangepicker](http://www.dangrossman.info/2012/08/20/a-date-range-picker-for-twitter-bootstrap/).\r\n\r\n    <input type=\"text\" id=\"period\">\r\n######\r\n    $('#period')\r\n      .datepicker({todaytHighlight:true, forceParse:false})\r\n      .multivalue({items:1, seperator:' - '});\r\n  \r\nor simply declare data-coprovide with no more script.\r\nnote - only thai extension that support data-provide declaration.\r\n\r\n    <input type=\"text\" \r\n      data-provide=\"datepicker\" \r\n      data-coprovide=\"multivalue\">\r\n\r\n## Options\r\n\r\n### values\r\n\r\nArray.  Default: undefined\r\n\r\nPredefined stored values.\r\n\r\n### seperator\r\n\r\nString.  Default: ','\r\n\r\n### items\r\n\r\nInteger.  Default: 0\r\n\r\nNumber of maximum stored values, 0 means unlimit.\r\n\r\n### menu\r\n\r\nString.  Default: `'<div class=\"multivalue-store\"></div>'`\r\n\r\n### menuAlign\r\n\r\nString.  Default: 'left'\r\n\r\n### menuMargin\r\n\r\nString.  Default: '10px'\r\n\r\n### item\r\n\r\nString.  Default: `'<span class=\"btn btn-small\"></span>'`\r\n\r\n### pushBtn\r\n\r\nString.  Default: undefined\r\n\r\nIf undefined, use default `'<b class=\"label label-info\">&crarr;</b>'`\r\n\r\n### popBtn\r\n\r\nString.  Default: undefined\r\n\r\nIf undefined, use default `'<b class=\"label label-info\">'+sign+''</b>'`\r\n\r\nsign should be seperator, except could looked up from \r\n\r\n    sepSigns: {\r\n        ',' : '&sbquo;'\r\n      , '-' : '&minus;'\r\n      , '~' : '&sim;'\r\n      , '*' : '&loast;'\r\n    }  \r\n\r\n### removeBtn\r\n\r\nString.  Default: undefined\r\n\r\nIf undefined, use default `'<b class=\"muted\">&times;</b> '`\r\n\r\n### autoRestore\r\n\r\nBoolean, Object, String.  Default: true  \r\n\r\nTry to bind 'event' to parent 'selector', to trigger auto-restore.\r\nif false, disable auto-restore\r\nif true, using default \r\n\r\n    {selector: 'form', event: 'submit', callback: function(){this.restore().lookup()}}.\r\n\r\nif String, means override the default selector.\r\nif Object, could override some or all properties of default.\r\n\r\n## Methods\r\n\r\n### .multivalue(options)\r\n\r\nInitializes a multivalue.\r\n\r\n### show\r\n\r\nArguments: None\r\n\r\nShow the stored values menu.\r\n\r\n    $('#input').multivalue('show');\r\n\r\n### hide\r\n\r\nArguments: None\r\n\r\nHide the stored values menu.\r\n\r\n    $('#input').multivalue('hide');\r\n\r\n### lookup\r\n\r\nArguments: None\r\n\r\nHide the menu if stored values is empty, otherwise show.\r\n\r\n    $('#input').multivalue('lookup');\r\n\r\n### store\r\n\r\nArguments: None\r\n\r\nPush the input value to stored value.\r\n\r\n    $('#input').multivalue('store');\r\n\r\n### restore\r\n\r\nArguments: None\r\n\r\nRevert the stored value back to input's value (with seperator).\r\n\r\n    $('#input').multivalue('restore');\r\n\r\n\r\n## Keyboard support\r\n\r\nThe multivalue includes some keyboard navigation:\r\n\r\n### enter, seperator (a comma or whatever defined in options)\r\n\r\nPush value from input to store.\r\n\r\n### backspace\r\n\r\nDelete the lastest stored value item.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}